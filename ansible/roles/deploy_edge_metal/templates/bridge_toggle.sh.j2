#!/bin/bash

# bridge_toggle.sh
# Script to attach/detach bridge interface scionwan to/from physical interface
# Moves IP address and updates default route accordingly

# ------------------------------
# Configuration Variables
# ------------------------------
PHYSICAL_IF="{{ public_interface }}"         # Physical network interface
BRIDGE_IF="scionwan"                         # Bridge interface
IP_ADDRESS="{{ public_ipv4 }}"              # IP address to move
GATEWAY_IP="{{ public_ipv4_gateway }}"       # Default gateway IP

# ------------------------------
# Function to Attach Bridge
# ------------------------------
attach_bridge() {
    echo "[INFO] Attaching bridge $BRIDGE_IF to $PHYSICAL_IF..."

    # Check if bridge interface exists
    if ! ip link show "$BRIDGE_IF" &> /dev/null; then
        echo "[ERROR] Bridge interface $BRIDGE_IF does not exist. Please create it first."
        exit 1
    fi

    # Remove IP from physical interface
    echo "[INFO] Removing IP address $IP_ADDRESS from $PHYSICAL_IF..."
    sudo ip addr del "$IP_ADDRESS" dev "$PHYSICAL_IF"

    # Assign IP to bridge interface
    echo "[INFO] Assigning IP address $IP_ADDRESS to $BRIDGE_IF..."
    sudo ip addr add "$IP_ADDRESS" dev "$BRIDGE_IF"

    # Bring up bridge interface
    echo "[INFO] Bringing up bridge interface $BRIDGE_IF..."
    sudo ip link set "$BRIDGE_IF" up

    # Attach physical interface to bridge
    echo "[INFO] Attaching $PHYSICAL_IF to bridge $BRIDGE_IF..."
    sudo ip link set "$PHYSICAL_IF" master "$BRIDGE_IF"

    # Bring up physical interface
    echo "[INFO] Bringing up physical interface $PHYSICAL_IF..."
    sudo ip link set "$PHYSICAL_IF" up

    # Change default route to bridge interface
    echo "[INFO] Updating default route to use $BRIDGE_IF..."
    sudo ip route del default via "$GATEWAY_IP" dev "$PHYSICAL_IF"
    sudo ip route add default via "$GATEWAY_IP" dev "$BRIDGE_IF"

    echo "[SUCCESS] Bridge $BRIDGE_IF attached to $PHYSICAL_IF successfully."
}

# ------------------------------
# Function to Detach Bridge
# ------------------------------
detach_bridge() {
    echo "[INFO] Detaching bridge $BRIDGE_IF from $PHYSICAL_IF..."

    # Remove IP from bridge interface
    echo "[INFO] Removing IP address $IP_ADDRESS from $BRIDGE_IF..."
    sudo ip addr del "$IP_ADDRESS" dev "$BRIDGE_IF"

    # Assign IP back to physical interface
    echo "[INFO] Assigning IP address $IP_ADDRESS back to $PHYSICAL_IF..."
    sudo ip addr add "$IP_ADDRESS" dev "$PHYSICAL_IF"

    # Change default route back to physical interface
    echo "[INFO] Updating default route to use $PHYSICAL_IF..."
    sudo ip route del default via "$GATEWAY_IP" dev "$BRIDGE_IF"
    sudo ip route add default via "$GATEWAY_IP" dev "$PHYSICAL_IF"

    # Detach physical interface from bridge
    echo "[INFO] Detaching $PHYSICAL_IF from bridge $BRIDGE_IF..."
    sudo ip link set "$PHYSICAL_IF" nomaster

    # Bring up physical interface
    echo "[INFO] Bringing up physical interface $PHYSICAL_IF..."
    sudo ip link set "$PHYSICAL_IF" up

    # Optionally, bring down the bridge interface if not needed
    # Uncomment the following lines if you want to bring down and delete the bridge
    # echo "[INFO] Bringing down bridge interface $BRIDGE_IF..."
    # sudo ip link set "$BRIDGE_IF" down
    # echo "[INFO] Deleting bridge interface $BRIDGE_IF..."
    # sudo brctl delbr "$BRIDGE_IF"

    echo "[SUCCESS] Bridge $BRIDGE_IF detached from $PHYSICAL_IF successfully."
}

# ------------------------------
# Function to Display Usage
# ------------------------------
usage() {
    echo "[INFO] Usage: $0 {attach|detach}"
    exit 1
}

# ------------------------------
# Ensure the Script is Run as Root
# ------------------------------
if [ "$EUID" -ne 0 ]; then
    echo "[ERROR] Please run as root or use sudo."
    exit 1
fi

# ------------------------------
# Parse Arguments
# ------------------------------
if [ $# -ne 1 ]; then
    usage
fi

case "$1" in
    attach)
        attach_bridge
        ;;
    detach)
        detach_bridge
        ;;
    *)
        usage
        ;;
esac