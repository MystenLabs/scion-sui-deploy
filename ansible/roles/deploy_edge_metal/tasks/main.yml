---
#- name: Install dependencies and create directories
#  ansible.builtin.import_tasks: tasks/init.yml

- name: Virtualize the public interface - SR-IOV
  ansible.builtin.import_tasks: tasks/interface-sriov.yml
  when: __deploy_edge_metal_virt_type == 'sriov'
  tags: sriov

- name: Virtualize the public interface - virtio bridge
  ansible.builtin.import_tasks: tasks/interface-virtio.yml
  when: __deploy_edge_metal_virt_type == 'virtio'
  tags: virtio

- name: Prepare the internal network
  ansible.builtin.import_tasks: tasks/network.yml

- name: Prepare the EDGE storage volume
  ansible.builtin.import_tasks: tasks/volume.yml

- name: Flush all handlers to ensure system readiness to run the VM
  ansible.builtin.meta: flush_handlers

- name: Kick-off the VM installation and immediately continue
  ansible.builtin.command: >-
    virt-install --name {{ __deploy_edge_metal_vm_name }} --virt-type kvm
    --memory {{ __deploy_edge_metal_vm_memory_mib }} --vcpus {{ __deploy_edge_metal_vm_vcpus }} --cpu host
    --boot hd --disk vol={{ __deploy_edge_metal_storage_pool_name }}/{{ __deploy_edge_metal_volume_name }}
    --os-variant ubuntu24.04 --graphics none 
    {% if __deploy_edge_metal_router_interface is defined %}
    --hostdev {{ host_device }}
    {% else %}
    --network bridge=scionwan
    {% endif %}
    --network network={{ __deploy_edge_metal_internal_network_name }}
    {% if __deploy_edge_metal_bgp_bridge %}
    --network network={{ __deploy_edge_metal_bgp_network_name }}
    {% endif %}
    --import --noautoconsole
  vars:
    pciid: "{{ ansible_facts[__deploy_edge_metal_router_interface].pciid | default('') }}"
    host_device: "{{ 'pci_' ~ (pciid | replace('.', '_') | replace (':', '_')) }}"
  changed_when: true
  become: true
